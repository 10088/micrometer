plugins {
    id 'org.springframework.boot' version '1.5.4.RELEASE'
}

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'nebula.optional-base'
apply plugin: 'nebula.facet'

facets {
    samples
}

dependencies {
    compile project(':micrometer-core')

    compile 'org.springframework:spring-beans'
    compile 'org.springframework.boot:spring-boot'
    compile 'org.springframework.boot:spring-boot-actuator'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework:spring-webmvc'
    compile 'org.springframework:spring-web'
    compile 'javax.servlet:javax.servlet-api:3.1.0', optional
    compile 'org.aspectj:aspectjweaver:1.8.+', optional

    // JUnit 5
    testCompile 'org.junit.platform:junit-platform-launcher:1.0.0-M5' // see https://github.com/junit-team/junit5/issues/586 for why this is necessary
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M5'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.0.0-M5'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M5'

    testCompile 'org.assertj:assertj-core:3.+'

    testCompile 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'org.springframework.boot:spring-boot-actuator'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework:spring-test'

    // for use in mock servers
    testCompile 'org.apache.tomcat.embed:tomcat-embed-core:8.5.15'

    testRuntime 'org.apache.httpcomponents:httpclient:4.4+'

    samplesCompile 'colt:colt:1.2.0'
}
