buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
    }
    dependencies {
        classpath 'org.ow2.asm:asm:5.0.3'
        classpath 'io.spring.gradle:spring-release-plugin:0.12.0-dev.2.uncommitted+38eb8af'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.2.0'
        classpath 'me.champeau.gradle:jmh-gradle-plugin:0.4.4'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath 'com.netflix.nebula:nebula-project-plugin:3.4.0'
    }
}

plugins {
    id "com.dorongold.task-tree" version "1.3"
}

apply plugin: 'io.spring.release'

allprojects {
    apply plugin: 'io.spring.license'

    afterEvaluate { project ->
        println "I'm building $project.name with version $project.version"
    }
    group = 'io.micrometer'
}

subprojects {
    apply plugin: 'java'

    if(!project.name.contains('samples')) {
        apply plugin: 'io.spring.publishing'

        contacts {
            'jschneider@pivotal.io' {
                moniker 'Jon Schneider'
                github 'jkschneider'
            }
        }

        if (project.extensions.findByName('bintray')) {
            bintray.labels = ['micrometer', 'atlas', 'metrics', 'prometheus', 'spectator', 'influx']
        }
    }

    description = 'Application monitoring instrumentation facade'

    repositories {
        mavenCentral()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}

defaultTasks 'build'
